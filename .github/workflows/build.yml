# This workflow has been modified to install Python dependencies and build executables of hello_world.py
# for Windows 11, Linux Ubuntu, and MacOS using a single version of Python.

# Note:
# The executables for Windows and Linux are currently for x86/64 systems while the executable
# for MacOS is a single binary with support for Intel and Apple Silicon machines.

name: Cross-Compile Python Application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, debian-latest]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python, version.
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ".[dev]"

    - name: Build executable
      run: |
        pyinstaller --onefile cli.py --name hello_world

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: hello-executable-${{ runner.os }}
        path: dist

  build-macos:
    runs-on: macos-latest
    
    strategy:
      matrix:
        python-version: [3.13]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ".[dev]"

      - name: Build application for Intel architecture
        run: |
          arch -x86_64 pyinstaller --onefile cli.py --name hello_intel  # Use --windowed for GUI apps

      - name: Build application for Apple Silicon architecture
        run: |
          arch -arm64 pyinstaller --onefile cli.py --name hello_arm

      - name: Create universal binary
        run: |
          mkdir -p dist/universal
          lipo -create -output dist/universal/hello_universal dist/hello_intel dist/hello_arm

      - name: List dist Directory
        run: |
          ls -la dist

      - name: Upload macOS universal .app artifact
        uses: actions/upload-artifact@v4
        with:
          name: hello-executable-universal-${{ runner.os }}
          path: dist/universal/hello_universal
